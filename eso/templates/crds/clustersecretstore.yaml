{{- if and (.Values.installCRDs) (.Values.crds.createClusterSecretStore) }}
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: sadigital-css
spec:
  # Used to select the correct ESO controller (think: ingress.ingressClassName)
  # The ESO controller is instantiated with a specific controller name
  # and filters ES based on this property
  # Optional
  #controller: dev

  provider:
    aws:
      service: SecretsManager
      role: arn:aws:iam::222073541442:role/BoundedKubernetesESOs_sboxapp
      region: eu-west-1
      auth:
        jwt:
          serviceAccountRef:
            name: external-secrets-operator
            namespace: external-secrets

status:
  # Standard condition schema
  conditions:
    # SecretStore ready condition indicates the given store is in ready
    # state and able to referenced by ExternalSecrets
    # If the `status` of this condition is `False`, ExternalSecret controllers
    # should prevent attempts to fetch secrets
    - type: Ready
      status: "False"
      reason: "ConfigError"
      message: "SecretStore validation failed"
      lastTransitionTime: "2019-08-12T12:33:02Z"

{{- end }}
